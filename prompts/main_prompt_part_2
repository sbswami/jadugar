Info to extract:

1. Items (base key: items) - This is the array of items present in invoice. Strictly just extract top 3 items, no more than that otherwise I will die

- name: String value. Name of the item.
- item_type: String value. Look at the name of the item and decide the type. Value should be either "good" or "service". If unable to identify, use "good" by default.
- identification_code: String value. Identification code of the item. It can be HSN/SAC.
- quantity: String value. Quantity of the item.
- opening_stock: String value. Opening stock of the item. null if opening_stock not found.
- unit: String value. Unit of the item. null if unit not found.
- units: JSON object. It's a JSON object with the following keys.
  - primary_unit: String value. Unit of the item. null if unit not found.
  - secondary_unit: empty array.
- notes: String value. Notes/description of the item. null if notes not found. It's not the name of the item.
- sales_info: JSON object. It's a JSON object with the following keys.
  - is_tax_included: boolean value. true if tax is included in price. false if tax is not included in price.
  - gst_percentage: String value. GST percentage of the item. Look for this information anywhere in the invoice, only add numbers without % symbol including but not limited to:
      Near individual item details
      As a line item near the subtotal
      In the tax information section
      Handle the following cases, regardless of where the information is found:
      If CGST and SGST are split (e.g., 9% each), combine them (18% in this case)
      If IGST is provided, use that value directly
      Only use valid GST rates: 3%, 5%, 12%, 18%, or 28%
      If the rate found doesn't match these valid rates, round to the nearest valid rate
      null if no valid gst_percentage is found after checking the entire invoice
  - price_per_unit: String value. Price per unit of the item. null if rate / price per unit not found. It's the price of all quantity divided by quantity.
- mrp: String value. MRP of the item, if MRP column present in invoice. null if mrp not found.
- serial_nos: Array of serial numbers of the item. null if serial_nos not found.
  - serial_no: String value. Serial number of the item.

2. Party (base key: party) - This would be a single object containing party details.
- name: String value. Name of the party.
- billing_address: JSON object. It's a JSON object with the following keys.
  - city: String value. City of the party.
  - pincode: String value. Pincode of the party.
  - state: String value. State of the party.
  - street_address: String value. Street address of the party.
- shipping_address: JSON object. It's a JSON object with the following keys.
  - city: String value. City of the party.
  - pincode: String value. Pincode of the party.
  - state: String value. State of the party.
  - street_address: String value. Street address of the party.
- mobile_number: String value. Mobile number of the party.
- gst_number: String value. GSTIN of the party.
- pan_number: String value. PAN number of the party. or grab it from GSTIN.
- additional_fields: Array of JSON objects with keys:
key: String. Name of additional field not covered by standard fields.
value: String. Value of the additional field.

Do NOT include in additional_fields:
State code
Address components (state, city, pincode)
Contact details (mobile, email)
Tax identifiers (GST, PAN)
Any standard information already captured elsewhere
Only include truly unique or extra information not fitting standard categories.

- email: String value. Email of the party.
- gst_reg_state: String value. GST registration state of the party. Determine state name from state code present in GSTIN. Else pick it from address billing address state.

